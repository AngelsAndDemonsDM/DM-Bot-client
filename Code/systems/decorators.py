def global_class(cls):
    """Декоратор для обеспечения того, что класс следует паттерну Singleton, то есть создается и используется только один экземпляр класса во всем приложении.

    Args:
        cls (type): Класс, к которому применяется декоратор.

    Returns:
        type: Класс с добавленным методом для получения единственного экземпляра.
    """
    instances = {}

    def get_instance(*args, **kwargs):
        """Возвращает единственный экземпляр класса, создавая его, если он еще не существует.

        Args:
            *args: Позиционные аргументы для передачи в конструктор класса.
            **kwargs: Именованные аргументы для передачи в конструктор класса.

        Returns:
            object: Единственный экземпляр класса.
        """
        if cls not in instances:
            instances[cls] = cls(*args, **kwargs)
        
        return instances[cls]
    
    cls.get_instance = get_instance
    return cls
